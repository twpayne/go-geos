- name: Area
  comment: returns g's area
  type: float64Property
- name: Boundary
  comment: returns the boundary of g
  type: unary
- name: Buffer
  comment: returns g with the given buffer
  type: unary
  extraArgs:
  - name: width
    type: float64
  - name: quadsegs
    type: int
- name: BufferWithStyle
  comment: returns a buffer using the provided style parameters
  type: unary
  extraArgs:
  - name: width
    type: float64
  - name: quadsegs
    type: int
  - name: endCapStyle
    type: BufCapStyle
  - name: joinStyle
    type: BufJoinStyle
  - name: mitreLimit
    type: float64
- name: BuildArea
  comment: returns the polygonization using all the linework, assuming that rings contained within rings are empty holes, rather than extra PolygonHoleSimplify
  type: unary
- name: Centroid
  comment: returns a point at the center of mass of g
  type: unary
  geosFunction: GEOSGetCentroid_r
- name: ClipByRect
  comment: returns g clipped to a rectangular polygon
  type: unary
  extraArgs:
  - name: minX
    type: float64
  - name: minY
    type: float64
  - name: maxX
    type: float64
  - name: maxY
    type: float64
- name: Clone
  comment: returns a clone of g
  type: unary
  geosFunction: GEOSGeom_clone_r
- name: ConcaveHull
  comment: returns the concave hull of g
  type: unary
  extraArgs:
  - name: ratio
    type: float64
  - name: allowHoles
    type: uint
- name: ConcaveHullByLength
  comment: returns the concave hull of g
  type: unary
  extraArgs:
  - name: ratio
    type: float64
  - name: allowHoles
    type: uint
- name: ConstrainedDelaunayTriangulation
  comment: returns the constrained Delaunay triangulation of the vertices of the g
  type: unary
- name: Contains
  comment: returns true if g contains other
  type: binaryPredicate
- name: ConvexHull
  comment: returns g's convex hull
  type: unary
- name: CoverageUnion
  comment: returns the union of g for polygonal inputs that are correctly noded and do not overlap
  type: unary
- name: CoveredBy
  comment: returns true if g is covered by other
  type: binaryPredicate
- name: Covers
  comment: returns true if g covers other
  type: binaryPredicate
- name: Crosses
  comment: returns true if g crosses other
  type: binaryPredicate
- name: Densify
  comment: returns g densified with the given tolerance
  type: unary
  extraArgs:
  - name: tolerance
    type: float64
- name: Difference
  comment: returns the difference between g and other
  type: binary
- name: DifferencePrec
  comment: returns the difference between g and other
  type: binary
  extraArgs:
  - name: gridSize
    type: float64
- name: Disjoint
  comment: returns true if g is disjoint from other
  type: binaryPredicate
- name: DisjointSubsetUnion
  comment: returns the union of all components of a single geometry (optimized for inputs that can be divided into subsets that do not intersect)
  type: unary
- name: Distance
  comment: returns the distance between the closes points on g and other
  type: float64BinaryProperty
- name: DistanceIndexed
  comment: returns the distance between g and other, using the indexed facet distance
  type: float64BinaryProperty
- name: DistanceWithin
  comment: returns whether the distance between g and other is within the given dist
  type: binaryPredicate
  extraArgs:
  - name: dist
    type: float64
- name: EndPoint
  comment: returns the last point of a LineString
  type: unary
  geosFunction: GEOSGeomGetEndPoint_r
- name: Envelope
  comment: returns the envelope of g
  type: unary
- name: Equals
  comment: returns true if g equals other
  type: binaryPredicate
- name: EqualsExact
  comment: returns true if g equals other exactly
  type: binaryPredicate
  extraArgs:
  - name: tolerance
    type: float64
- name: FrechetDistance
  comment: returns the Fréchet distance between g and other
  type: float64BinaryProperty
- name: FrechetDistanceDensify
  comment: returns the Fréchet distance between g and other
  type: float64BinaryProperty
  extraArgs:
  - name: densifyFrac
    type: float64
- name: HasZ
  comment: returns if g has Z coordinates
  type: unaryPredicate
- name: HausdorffDistance
  comment: returns the Hausdorff distance between g and other
  type: float64BinaryProperty
- name: HausdorffDistanceDensify
  comment: returns the Hausdorff distance between g and other
  type: float64BinaryProperty
  extraArgs:
  - name: densifyFrac
    type: float64
- name: Interpolate
  comment: returns a point distance d from the start of g, which must be a linestring
  type: unary
  nil: true
  extraArgs:
  - name: d
    type: float64
- name: InterpolateNormalized
  comment: returns the point that is at proportion from the start
  type: unary
  nil: true
  extraArgs:
  - name: proportion
    type: float64
- name: Intersection
  comment: returns the intersection of g and other
  type: binary
- name: IntersectionPrec
  comment: returns the intersection of g and other
  type: binary
  extraArgs:
  - name: gridSize
    type: float64
- name: Intersects
  comment: returns true if g intersects other
  type: binaryPredicate
- name: IsClosed
  comment: returns true if g is closed
  type: unaryPredicate
  geosFunction: GEOSisClosed_r
- name: IsEmpty
  comment: returns true if g is empty
  type: unaryPredicate
  geosFunction: GEOSisEmpty_r
- name: IsRing
  comment: returns true if g is a ring
  type: unaryPredicate
  geosFunction: GEOSisRing_r
- name: IsSimple
  comment: returns true if g is simple
  type: unaryPredicate
  geosFunction: GEOSisSimple_r
- name: IsValid
  comment: returns true if g is valid
  type: unaryPredicate
  geosFunction: GEOSisValid_r
- name: LargestEmptyCircle
  comment: returns the largest empty circle for g, up to a specified tolerance
  type: binary
  extraArgs:
  - name: tolerance
    type: float64
- name: Length
  comment: returns g's length
  type: float64Property
- name: LineMerge
  comment: returns a set of fully noded LineStrings, removing any cardinality 2 nodes in the linework
  type: unary
- name: MakeValid
  comment: repairs an invalid geometry, returning a valid output
  type: unary
- name: MaximumInscribedCircle
  comment: returns the maximum inscribed circle of g up to the the given tolerance
  type: unary
  extraArgs:
  - name: tolerance
    type: float64
- name: MinimumClearance
  comment: returns the minimum clearance of g
  type: float64Property
- name: MinimumClearanceLine
  comment: returns a LineString whose endpoints define the minimum clearance of g
  type: unary
- name: MinimumRotatedRectangle
  comment: returns the minimum rotated rectangle enclosing g
  type: unary
- name: MinimumWidth
  comment: returns a linestring geometry which represents the minimum diameter of g
  type: unary
- name: Node
  comment: returns a new geometry in which no lines cross each other, and all touching occurs at endpoints
  type: unary
- name: OffsetCurve
  comment: returns the offset curve line(s) of g
  type: unary
  extraArgs:
  - name: width
    type: float64
  - name: quadsegs
    type: int
  #- name: endCapStyle
  #  type: BufCapStyle
  - name: joinStyle
    type: BufJoinStyle
  - name: mitreLimit
    type: float64
- name: Overlaps
  comment: returns true if g overlaps other
  type: binaryPredicate
#- name: PolygonHoleSimplify
#  type: unary
#  extraArgs:
#  - name: isOuter
#    type: int
#  - name: vertexNumFraction
#    type: float64
#- name: PolygonHoleSimplifyMode
#  type: unary
#  extraArgs:
#  - name: isOuter
#    type: int
#  - name: parameterMode
#    type: uint
#  - name: vertexNumFraction
#    type: float64
- name: PointOnSurface
  comment: returns a point that is inside the boundary of a polygonal geometry
  type: unary
- name: Project
  comment: returns the distance of other(a point) projected onto g(a line) from the start of the line
  type: float64BinaryProperty
  valueReturned: true
- name: ProjectNormalized
  comment: returns the proportional distance of other(a point) projected onto g(a line) from the start of the line. For example, a point that projects to the middle of a line would be return 0.5
  type: float64BinaryProperty
  valueReturned: true
- name: Relate
  comment: returns the DE9IM pattern for g and other
  type: stringBinaryProperty
- name: RelateBoundaryNodeRule
  comment: returns the DE9IM pattern for g and other
  type: stringBinaryProperty
  extraArgs:
  - name: bnr
    type: RelateBoundaryNodeRule
- name: Reverse
  comment: returns g with sequence orders reversed
  type: unary
- name: SetPrecision
  comment: changes the coordinate precision of g
  type: unary
  geosFunction: GEOSGeom_setPrecision_r
  extraArgs:
  - name: gridSize
    type: float64
  - name: flags
    type: PrecisionRule
- name: SharedPaths
  comment: returns the paths shared between g and other, which must be lineal geometries
  type: binary
- name: Simplify
  comment: returns a simplified geometry
  type: unary
  extraArgs:
  - name: tolerance
    type: float64
- name: Snap
  comment: returns a geometry with the vertices and segments of g snapped to other within the given tolerance
  type: binary
  extraArgs:
  - name: tolerance
    type: float64
- name: StartPoint
  comment: returns the first point of a LineString
  type: unary
  geosFunction: GEOSGeomGetStartPoint_r
- name: SymDifference
  comment: returns the symmetric difference between g and other
  type: binary
- name: SymDifferencePrec
  comment: returns the symmetric difference between g and other
  type: binary
  extraArgs:
  - name: gridSize
    type: float64
- name: TopologyPreserveSimplify
  comment: returns a simplified geometry preserving topology
  type: unary
  extraArgs:
  - name: tolerance
    type: float64
- name: Touches
  comment: returns true if g touches other
  type: binaryPredicate
- name: UnaryUnion
  comment: returns the union of all components of a single geometry
  type: unary
- name: UnaryUnionPrec
  comment: returns the union of all components of a single geometry
  type: unary
  extraArgs:
  - name: gridSize
    type: float64
- name: Union
  comment: returns the union of g and other
  type: binary
- name: UnionPrec
  comment: returns the union of g and other
  type: binary
  extraArgs:
  - name: gridSize
    type: float64
- name: Within
  comment: returns true if g is within other
  type: binaryPredicate
- name: X
  comment: returns g's X coordinate
  type: float64Property
  geosFunction: GEOSGeomGetX_r
- name: Y
  comment: returns g's Y coordinate
  type: float64Property
  geosFunction: GEOSGeomGetY_r
